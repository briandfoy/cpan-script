#!perl

use strict;
use warnings;

use 5.010;

use Cwd                     qw( cwd );
use File::Copy              qw( copy );
use File::Spec::Functions;

my $cpanpm_base = $ARGV[0] || '../cpanpm';
die "Couldn't find cpanpm repository at $cpanpm_base\n"
	unless -d $cpanpm_base;

{
my $cwd = cwd();
chdir $cpanpm_base or die "Couldn't chdir to $cpanpm_base";

my( $branch ) = map { /^\*\s*(.*)/ ? $1 : () } `git branch`;

#die "Branch is not 'update_cpan'\n" unless $branch eq 'update_cpan';
print "branch is [$branch]\n";

my $uptodate = ( `git pull` =~ /Already/ );
die "Repo is not up to date! Stopping!\n" unless $uptodate;

chdir $cwd or die "Couldn't chdir back to $cwd";
}

my @files_to_copy = (
	[ qw( lib/Cpan.pm lib/App/Cpan.pm ) ],
	[ qw( script/cpan scripts/cpan ) ],
	);
	
foreach my $pair ( @files_to_copy ) {
	my( $original, $copy_rel, $mode ) = @$pair;
	warn "Could not find $original\n" unless -e $original;
	my $destination = catfile( $cpanpm_base, $copy_rel );
	print "Copying $original -> $destination\n";
    copy( $original, $destination ) or warn "Copy failed: $!";
    }
